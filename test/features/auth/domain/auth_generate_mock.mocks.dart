// Mocks generated by Mockito 5.4.5 from annotations
// in todo_bloc/test/features/auth/domain/auth_generate_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_bloc/core/error/failures.dart' as _i5;
import 'package:todo_bloc/features/auth/data/datasources/body/forgot_password_body.dart'
    as _i13;
import 'package:todo_bloc/features/auth/data/datasources/body/login_body.dart'
    as _i11;
import 'package:todo_bloc/features/auth/data/datasources/body/register_body.dart'
    as _i7;
import 'package:todo_bloc/features/auth/data/datasources/body/send_otp_body.dart'
    as _i9;
import 'package:todo_bloc/features/auth/domain/entities/forgot_password_entity.dart'
    as _i12;
import 'package:todo_bloc/features/auth/domain/entities/login_entity.dart'
    as _i10;
import 'package:todo_bloc/features/auth/domain/entities/otp_entity.dart' as _i8;
import 'package:todo_bloc/features/auth/domain/entities/register_entity.dart'
    as _i6;
import 'package:todo_bloc/features/auth/domain/repositories/auth_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.RegisterEntity>> register(
          _i7.RegisterBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [body],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.RegisterEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.RegisterEntity>(
          this,
          Invocation.method(
            #register,
            [body],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.RegisterEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.OtpEntity>> sendOtp(
          _i9.SendOtpBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOtp,
          [body],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.OtpEntity>>.value(
            _FakeEither_0<_i5.Failure, _i8.OtpEntity>(
          this,
          Invocation.method(
            #sendOtp,
            [body],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.OtpEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.LoginEntity>> login(
          _i11.LoginBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [body],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.LoginEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.LoginEntity>(
          this,
          Invocation.method(
            #login,
            [body],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.LoginEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i12.ForgotPasswordEntity>> forgotPassword(
          _i13.ForgotPasswordBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [body],
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.Failure, _i12.ForgotPasswordEntity>>.value(
            _FakeEither_0<_i5.Failure, _i12.ForgotPasswordEntity>(
          this,
          Invocation.method(
            #forgotPassword,
            [body],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i12.ForgotPasswordEntity>>);

  @override
  _i4.Future<bool> setToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setToken,
          [token],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
